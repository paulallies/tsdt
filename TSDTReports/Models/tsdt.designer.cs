#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSDTReports.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="TSDT")]
	public partial class tsdtDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Project(tbl_Project instance);
    partial void Updatetbl_Project(tbl_Project instance);
    partial void Deletetbl_Project(tbl_Project instance);
    partial void Inserttbl_User_Role(tbl_User_Role instance);
    partial void Updatetbl_User_Role(tbl_User_Role instance);
    partial void Deletetbl_User_Role(tbl_User_Role instance);
    partial void Inserttbl_Status(tbl_Status instance);
    partial void Updatetbl_Status(tbl_Status instance);
    partial void Deletetbl_Status(tbl_Status instance);
    partial void Inserttbl_TimeSheet(tbl_TimeSheet instance);
    partial void Updatetbl_TimeSheet(tbl_TimeSheet instance);
    partial void Deletetbl_TimeSheet(tbl_TimeSheet instance);
    partial void Inserttbl_Project_Owner(tbl_Project_Owner instance);
    partial void Updatetbl_Project_Owner(tbl_Project_Owner instance);
    partial void Deletetbl_Project_Owner(tbl_Project_Owner instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    partial void Inserttbl_Resource(tbl_Resource instance);
    partial void Updatetbl_Resource(tbl_Resource instance);
    partial void Deletetbl_Resource(tbl_Resource instance);
    #endregion
		
		public tsdtDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TSDTConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public tsdtDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tsdtDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tsdtDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tsdtDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Project> tbl_Projects
		{
			get
			{
				return this.GetTable<tbl_Project>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User_Role> tbl_User_Roles
		{
			get
			{
				return this.GetTable<tbl_User_Role>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Status> tbl_Status
		{
			get
			{
				return this.GetTable<tbl_Status>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TimeSheet> tbl_TimeSheets
		{
			get
			{
				return this.GetTable<tbl_TimeSheet>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Project_Owner> tbl_Project_Owners
		{
			get
			{
				return this.GetTable<tbl_Project_Owner>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Resource> tbl_Resources
		{
			get
			{
				return this.GetTable<tbl_Resource>();
			}
		}
	}
	
	[Table(Name="dbo.tbl_Project")]
	public partial class tbl_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Project_ID;
		
		private System.Nullable<int> _Project_Number;
		
		private string _SAP_Number;
		
		private string _WBS;
		
		private string _Project_Name;
		
		private System.Nullable<int> _Status_ID;
		
		private EntitySet<tbl_Project_Owner> _tbl_Project_Owners;
		
		private EntitySet<tbl_Resource> _tbl_Resources;
		
		private EntityRef<tbl_Status> _tbl_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProject_IDChanging(int value);
    partial void OnProject_IDChanged();
    partial void OnProject_NumberChanging(System.Nullable<int> value);
    partial void OnProject_NumberChanged();
    partial void OnSAP_NumberChanging(string value);
    partial void OnSAP_NumberChanged();
    partial void OnWBSChanging(string value);
    partial void OnWBSChanged();
    partial void OnProject_NameChanging(string value);
    partial void OnProject_NameChanged();
    partial void OnStatus_IDChanging(System.Nullable<int> value);
    partial void OnStatus_IDChanged();
    #endregion
		
		public tbl_Project()
		{
			this._tbl_Project_Owners = new EntitySet<tbl_Project_Owner>(new Action<tbl_Project_Owner>(this.attach_tbl_Project_Owners), new Action<tbl_Project_Owner>(this.detach_tbl_Project_Owners));
			this._tbl_Resources = new EntitySet<tbl_Resource>(new Action<tbl_Resource>(this.attach_tbl_Resources), new Action<tbl_Resource>(this.detach_tbl_Resources));
			this._tbl_Status = default(EntityRef<tbl_Status>);
			OnCreated();
		}
		
		[Column(Storage="_Project_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Project_Number", DbType="Int")]
		public System.Nullable<int> Project_Number
		{
			get
			{
				return this._Project_Number;
			}
			set
			{
				if ((this._Project_Number != value))
				{
					this.OnProject_NumberChanging(value);
					this.SendPropertyChanging();
					this._Project_Number = value;
					this.SendPropertyChanged("Project_Number");
					this.OnProject_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_SAP_Number", DbType="VarChar(50)")]
		public string SAP_Number
		{
			get
			{
				return this._SAP_Number;
			}
			set
			{
				if ((this._SAP_Number != value))
				{
					this.OnSAP_NumberChanging(value);
					this.SendPropertyChanging();
					this._SAP_Number = value;
					this.SendPropertyChanged("SAP_Number");
					this.OnSAP_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_WBS", DbType="VarChar(50)")]
		public string WBS
		{
			get
			{
				return this._WBS;
			}
			set
			{
				if ((this._WBS != value))
				{
					this.OnWBSChanging(value);
					this.SendPropertyChanging();
					this._WBS = value;
					this.SendPropertyChanged("WBS");
					this.OnWBSChanged();
				}
			}
		}
		
		[Column(Storage="_Project_Name", DbType="VarChar(200)")]
		public string Project_Name
		{
			get
			{
				return this._Project_Name;
			}
			set
			{
				if ((this._Project_Name != value))
				{
					this.OnProject_NameChanging(value);
					this.SendPropertyChanging();
					this._Project_Name = value;
					this.SendPropertyChanged("Project_Name");
					this.OnProject_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Status_ID", DbType="Int")]
		public System.Nullable<int> Status_ID
		{
			get
			{
				return this._Status_ID;
			}
			set
			{
				if ((this._Status_ID != value))
				{
					if (this._tbl_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_ID = value;
					this.SendPropertyChanged("Status_ID");
					this.OnStatus_IDChanged();
				}
			}
		}
		
		[Association(Name="tbl_Project_tbl_Project_Owner", Storage="_tbl_Project_Owners", ThisKey="Project_ID", OtherKey="Project_ID")]
		public EntitySet<tbl_Project_Owner> tbl_Project_Owners
		{
			get
			{
				return this._tbl_Project_Owners;
			}
			set
			{
				this._tbl_Project_Owners.Assign(value);
			}
		}
		
		[Association(Name="tbl_Project_tbl_Resource", Storage="_tbl_Resources", ThisKey="Project_ID", OtherKey="Project_ID")]
		public EntitySet<tbl_Resource> tbl_Resources
		{
			get
			{
				return this._tbl_Resources;
			}
			set
			{
				this._tbl_Resources.Assign(value);
			}
		}
		
		[Association(Name="tbl_Status_tbl_Project", Storage="_tbl_Status", ThisKey="Status_ID", OtherKey="Status_ID", IsForeignKey=true)]
		public tbl_Status tbl_Status
		{
			get
			{
				return this._tbl_Status.Entity;
			}
			set
			{
				tbl_Status previousValue = this._tbl_Status.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Status.Entity = null;
						previousValue.tbl_Projects.Remove(this);
					}
					this._tbl_Status.Entity = value;
					if ((value != null))
					{
						value.tbl_Projects.Add(this);
						this._Status_ID = value.Status_ID;
					}
					else
					{
						this._Status_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Project_Owners(tbl_Project_Owner entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Project = this;
		}
		
		private void detach_tbl_Project_Owners(tbl_Project_Owner entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Project = null;
		}
		
		private void attach_tbl_Resources(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Project = this;
		}
		
		private void detach_tbl_Resources(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Project = null;
		}
	}
	
	[Table(Name="dbo.tbl_User_Role")]
	public partial class tbl_User_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User_Role;
		
		private string _User_Role_Descr;
		
		private EntitySet<tbl_User> _tbl_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_RoleChanging(string value);
    partial void OnUser_RoleChanged();
    partial void OnUser_Role_DescrChanging(string value);
    partial void OnUser_Role_DescrChanged();
    #endregion
		
		public tbl_User_Role()
		{
			this._tbl_Users = new EntitySet<tbl_User>(new Action<tbl_User>(this.attach_tbl_Users), new Action<tbl_User>(this.detach_tbl_Users));
			OnCreated();
		}
		
		[Column(Storage="_User_Role", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_Role
		{
			get
			{
				return this._User_Role;
			}
			set
			{
				if ((this._User_Role != value))
				{
					this.OnUser_RoleChanging(value);
					this.SendPropertyChanging();
					this._User_Role = value;
					this.SendPropertyChanged("User_Role");
					this.OnUser_RoleChanged();
				}
			}
		}
		
		[Column(Storage="_User_Role_Descr", DbType="VarChar(100)")]
		public string User_Role_Descr
		{
			get
			{
				return this._User_Role_Descr;
			}
			set
			{
				if ((this._User_Role_Descr != value))
				{
					this.OnUser_Role_DescrChanging(value);
					this.SendPropertyChanging();
					this._User_Role_Descr = value;
					this.SendPropertyChanged("User_Role_Descr");
					this.OnUser_Role_DescrChanged();
				}
			}
		}
		
		[Association(Name="tbl_User_Role_tbl_User", Storage="_tbl_Users", ThisKey="User_Role", OtherKey="User_Role")]
		public EntitySet<tbl_User> tbl_Users
		{
			get
			{
				return this._tbl_Users;
			}
			set
			{
				this._tbl_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Users(tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User_Role = this;
		}
		
		private void detach_tbl_Users(tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User_Role = null;
		}
	}
	
	[Table(Name="dbo.tbl_Status")]
	public partial class tbl_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Status_ID;
		
		private string _Status;
		
		private EntitySet<tbl_Project> _tbl_Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatus_IDChanging(int value);
    partial void OnStatus_IDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public tbl_Status()
		{
			this._tbl_Projects = new EntitySet<tbl_Project>(new Action<tbl_Project>(this.attach_tbl_Projects), new Action<tbl_Project>(this.detach_tbl_Projects));
			OnCreated();
		}
		
		[Column(Storage="_Status_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Status_ID
		{
			get
			{
				return this._Status_ID;
			}
			set
			{
				if ((this._Status_ID != value))
				{
					this.OnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_ID = value;
					this.SendPropertyChanged("Status_ID");
					this.OnStatus_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Association(Name="tbl_Status_tbl_Project", Storage="_tbl_Projects", ThisKey="Status_ID", OtherKey="Status_ID")]
		public EntitySet<tbl_Project> tbl_Projects
		{
			get
			{
				return this._tbl_Projects;
			}
			set
			{
				this._tbl_Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Projects(tbl_Project entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status = this;
		}
		
		private void detach_tbl_Projects(tbl_Project entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status = null;
		}
	}
	
	[Table(Name="dbo.tbl_TimeSheet")]
	public partial class tbl_TimeSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Resource_ID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<decimal> _Hours;
		
		private EntityRef<tbl_Resource> _tbl_Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResource_IDChanging(System.Nullable<int> value);
    partial void OnResource_IDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnHoursChanging(System.Nullable<decimal> value);
    partial void OnHoursChanged();
    #endregion
		
		public tbl_TimeSheet()
		{
			this._tbl_Resource = default(EntityRef<tbl_Resource>);
			OnCreated();
		}
		
		[Column(Storage="_Resource_ID", DbType="Int", IsPrimaryKey=true)]
		public System.Nullable<int> Resource_ID
		{
			get
			{
				return this._Resource_ID;
			}
			set
			{
				if ((this._Resource_ID != value))
				{
					if (this._tbl_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResource_IDChanging(value);
					this.SendPropertyChanging();
					this._Resource_ID = value;
					this.SendPropertyChanged("Resource_ID");
					this.OnResource_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime", IsPrimaryKey=true)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Hours", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[Association(Name="tbl_Resource_tbl_TimeSheet", Storage="_tbl_Resource", ThisKey="Resource_ID", OtherKey="Resource_ID", IsForeignKey=true)]
		public tbl_Resource tbl_Resource
		{
			get
			{
				return this._tbl_Resource.Entity;
			}
			set
			{
				tbl_Resource previousValue = this._tbl_Resource.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Resource.Entity = null;
						previousValue.tbl_TimeSheets.Remove(this);
					}
					this._tbl_Resource.Entity = value;
					if ((value != null))
					{
						value.tbl_TimeSheets.Add(this);
						this._Resource_ID = value.Resource_ID;
					}
					else
					{
						this._Resource_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Project_Owner")]
	public partial class tbl_Project_Owner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _User_CAI;
		
		private int _Project_ID;
		
		private EntityRef<tbl_Project> _tbl_Project;
		
		private EntityRef<tbl_User> _tbl_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUser_CAIChanging(string value);
    partial void OnUser_CAIChanged();
    partial void OnProject_IDChanging(int value);
    partial void OnProject_IDChanged();
    #endregion
		
		public tbl_Project_Owner()
		{
			this._tbl_Project = default(EntityRef<tbl_Project>);
			this._tbl_User = default(EntityRef<tbl_User>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_User_CAI", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_CAI
		{
			get
			{
				return this._User_CAI;
			}
			set
			{
				if ((this._User_CAI != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_CAIChanging(value);
					this.SendPropertyChanging();
					this._User_CAI = value;
					this.SendPropertyChanged("User_CAI");
					this.OnUser_CAIChanged();
				}
			}
		}
		
		[Column(Storage="_Project_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					if (this._tbl_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[Association(Name="tbl_Project_tbl_Project_Owner", Storage="_tbl_Project", ThisKey="Project_ID", OtherKey="Project_ID", IsForeignKey=true)]
		public tbl_Project tbl_Project
		{
			get
			{
				return this._tbl_Project.Entity;
			}
			set
			{
				tbl_Project previousValue = this._tbl_Project.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Project.Entity = null;
						previousValue.tbl_Project_Owners.Remove(this);
					}
					this._tbl_Project.Entity = value;
					if ((value != null))
					{
						value.tbl_Project_Owners.Add(this);
						this._Project_ID = value.Project_ID;
					}
					else
					{
						this._Project_ID = default(int);
					}
					this.SendPropertyChanged("tbl_Project");
				}
			}
		}
		
		[Association(Name="tbl_User_tbl_Project_Owner", Storage="_tbl_User", ThisKey="User_CAI", OtherKey="User_CAI", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Project_Owners.Remove(this);
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Project_Owners.Add(this);
						this._User_CAI = value.User_CAI;
					}
					else
					{
						this._User_CAI = default(string);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_User")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User_CAI;
		
		private string _User_FirstName;
		
		private string _User_LastName;
		
		private string _User_Role;
		
		private bool _active;
		
		private string _CompanyID;
		
		private string _EmployeeNumber;
		
		private string _CompanyName;
		
		private EntitySet<tbl_Project_Owner> _tbl_Project_Owners;
		
		private EntitySet<tbl_Resource> _tbl_Resources;
		
		private EntityRef<tbl_User_Role> _tbl_User_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_CAIChanging(string value);
    partial void OnUser_CAIChanged();
    partial void OnUser_FirstNameChanging(string value);
    partial void OnUser_FirstNameChanged();
    partial void OnUser_LastNameChanging(string value);
    partial void OnUser_LastNameChanged();
    partial void OnUser_RoleChanging(string value);
    partial void OnUser_RoleChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnEmployeeNumberChanging(string value);
    partial void OnEmployeeNumberChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    #endregion
		
		public tbl_User()
		{
			this._tbl_Project_Owners = new EntitySet<tbl_Project_Owner>(new Action<tbl_Project_Owner>(this.attach_tbl_Project_Owners), new Action<tbl_Project_Owner>(this.detach_tbl_Project_Owners));
			this._tbl_Resources = new EntitySet<tbl_Resource>(new Action<tbl_Resource>(this.attach_tbl_Resources), new Action<tbl_Resource>(this.detach_tbl_Resources));
			this._tbl_User_Role = default(EntityRef<tbl_User_Role>);
			OnCreated();
		}
		
		[Column(Storage="_User_CAI", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_CAI
		{
			get
			{
				return this._User_CAI;
			}
			set
			{
				if ((this._User_CAI != value))
				{
					this.OnUser_CAIChanging(value);
					this.SendPropertyChanging();
					this._User_CAI = value;
					this.SendPropertyChanged("User_CAI");
					this.OnUser_CAIChanged();
				}
			}
		}
		
		[Column(Storage="_User_FirstName", DbType="VarChar(50)")]
		public string User_FirstName
		{
			get
			{
				return this._User_FirstName;
			}
			set
			{
				if ((this._User_FirstName != value))
				{
					this.OnUser_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._User_FirstName = value;
					this.SendPropertyChanged("User_FirstName");
					this.OnUser_FirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_User_LastName", DbType="VarChar(50)")]
		public string User_LastName
		{
			get
			{
				return this._User_LastName;
			}
			set
			{
				if ((this._User_LastName != value))
				{
					this.OnUser_LastNameChanging(value);
					this.SendPropertyChanging();
					this._User_LastName = value;
					this.SendPropertyChanged("User_LastName");
					this.OnUser_LastNameChanged();
				}
			}
		}
		
		[Column(Storage="_User_Role", DbType="VarChar(20)")]
		public string User_Role
		{
			get
			{
				return this._User_Role;
			}
			set
			{
				if ((this._User_Role != value))
				{
					if (this._tbl_User_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_RoleChanging(value);
					this.SendPropertyChanging();
					this._User_Role = value;
					this.SendPropertyChanged("User_Role");
					this.OnUser_RoleChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyID", DbType="VarChar(20)")]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmployeeNumber", DbType="VarChar(20)")]
		public string EmployeeNumber
		{
			get
			{
				return this._EmployeeNumber;
			}
			set
			{
				if ((this._EmployeeNumber != value))
				{
					this.OnEmployeeNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNumber = value;
					this.SendPropertyChanged("EmployeeNumber");
					this.OnEmployeeNumberChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyName", DbType="VarChar(30)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Association(Name="tbl_User_tbl_Project_Owner", Storage="_tbl_Project_Owners", ThisKey="User_CAI", OtherKey="User_CAI")]
		public EntitySet<tbl_Project_Owner> tbl_Project_Owners
		{
			get
			{
				return this._tbl_Project_Owners;
			}
			set
			{
				this._tbl_Project_Owners.Assign(value);
			}
		}
		
		[Association(Name="tbl_User_tbl_Resource", Storage="_tbl_Resources", ThisKey="User_CAI", OtherKey="User_CAI")]
		public EntitySet<tbl_Resource> tbl_Resources
		{
			get
			{
				return this._tbl_Resources;
			}
			set
			{
				this._tbl_Resources.Assign(value);
			}
		}
		
		[Association(Name="tbl_User_Role_tbl_User", Storage="_tbl_User_Role", ThisKey="User_Role", OtherKey="User_Role", IsForeignKey=true)]
		public tbl_User_Role tbl_User_Role
		{
			get
			{
				return this._tbl_User_Role.Entity;
			}
			set
			{
				tbl_User_Role previousValue = this._tbl_User_Role.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User_Role.Entity = null;
						previousValue.tbl_Users.Remove(this);
					}
					this._tbl_User_Role.Entity = value;
					if ((value != null))
					{
						value.tbl_Users.Add(this);
						this._User_Role = value.User_Role;
					}
					else
					{
						this._User_Role = default(string);
					}
					this.SendPropertyChanged("tbl_User_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Project_Owners(tbl_Project_Owner entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = this;
		}
		
		private void detach_tbl_Project_Owners(tbl_Project_Owner entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = null;
		}
		
		private void attach_tbl_Resources(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = this;
		}
		
		private void detach_tbl_Resources(tbl_Resource entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = null;
		}
	}
	
	[Table(Name="dbo.tbl_Resource")]
	public partial class tbl_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Resource_ID;
		
		private System.Nullable<int> _Project_ID;
		
		private string _User_CAI;
		
		private bool _Hide;
		
		private bool _active;
		
		private System.Nullable<decimal> _ResourceHours;
		
		private EntitySet<tbl_TimeSheet> _tbl_TimeSheets;
		
		private EntityRef<tbl_Project> _tbl_Project;
		
		private EntityRef<tbl_User> _tbl_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResource_IDChanging(int value);
    partial void OnResource_IDChanged();
    partial void OnProject_IDChanging(System.Nullable<int> value);
    partial void OnProject_IDChanged();
    partial void OnUser_CAIChanging(string value);
    partial void OnUser_CAIChanged();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnResourceHoursChanging(System.Nullable<decimal> value);
    partial void OnResourceHoursChanged();
    #endregion
		
		public tbl_Resource()
		{
			this._tbl_TimeSheets = new EntitySet<tbl_TimeSheet>(new Action<tbl_TimeSheet>(this.attach_tbl_TimeSheets), new Action<tbl_TimeSheet>(this.detach_tbl_TimeSheets));
			this._tbl_Project = default(EntityRef<tbl_Project>);
			this._tbl_User = default(EntityRef<tbl_User>);
			OnCreated();
		}
		
		[Column(Storage="_Resource_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Resource_ID
		{
			get
			{
				return this._Resource_ID;
			}
			set
			{
				if ((this._Resource_ID != value))
				{
					this.OnResource_IDChanging(value);
					this.SendPropertyChanging();
					this._Resource_ID = value;
					this.SendPropertyChanged("Resource_ID");
					this.OnResource_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Project_ID", DbType="Int")]
		public System.Nullable<int> Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					if (this._tbl_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}
		
		[Column(Storage="_User_CAI", DbType="VarChar(15)")]
		public string User_CAI
		{
			get
			{
				return this._User_CAI;
			}
			set
			{
				if ((this._User_CAI != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_CAIChanging(value);
					this.SendPropertyChanging();
					this._User_CAI = value;
					this.SendPropertyChanged("User_CAI");
					this.OnUser_CAIChanged();
				}
			}
		}
		
		[Column(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_ResourceHours", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> ResourceHours
		{
			get
			{
				return this._ResourceHours;
			}
			set
			{
				if ((this._ResourceHours != value))
				{
					this.OnResourceHoursChanging(value);
					this.SendPropertyChanging();
					this._ResourceHours = value;
					this.SendPropertyChanged("ResourceHours");
					this.OnResourceHoursChanged();
				}
			}
		}
		
		[Association(Name="tbl_Resource_tbl_TimeSheet", Storage="_tbl_TimeSheets", ThisKey="Resource_ID", OtherKey="Resource_ID")]
		public EntitySet<tbl_TimeSheet> tbl_TimeSheets
		{
			get
			{
				return this._tbl_TimeSheets;
			}
			set
			{
				this._tbl_TimeSheets.Assign(value);
			}
		}
		
		[Association(Name="tbl_Project_tbl_Resource", Storage="_tbl_Project", ThisKey="Project_ID", OtherKey="Project_ID", IsForeignKey=true)]
		public tbl_Project tbl_Project
		{
			get
			{
				return this._tbl_Project.Entity;
			}
			set
			{
				tbl_Project previousValue = this._tbl_Project.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Project.Entity = null;
						previousValue.tbl_Resources.Remove(this);
					}
					this._tbl_Project.Entity = value;
					if ((value != null))
					{
						value.tbl_Resources.Add(this);
						this._Project_ID = value.Project_ID;
					}
					else
					{
						this._Project_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Project");
				}
			}
		}
		
		[Association(Name="tbl_User_tbl_Resource", Storage="_tbl_User", ThisKey="User_CAI", OtherKey="User_CAI", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Resources.Remove(this);
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Resources.Add(this);
						this._User_CAI = value.User_CAI;
					}
					else
					{
						this._User_CAI = default(string);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_TimeSheets(tbl_TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Resource = this;
		}
		
		private void detach_tbl_TimeSheets(tbl_TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Resource = null;
		}
	}
}
#pragma warning restore 1591
